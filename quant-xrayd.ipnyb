{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/pagnihot/pa-pub-test/blob/main/quant-xrayd.ipnyb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 6,
      "metadata": {
        "id": "UVcD-LpNg0qE"
      },
      "outputs": [],
      "source": [
        "try:\n",
        "    from google.colab import auth\n",
        "    GOOGLE_COLAB = True\n",
        "except ImportError:\n",
        "    GOOGLE_COLAB = False"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "\n",
        "import dask.dataframe as dd\n",
        "import dask.array as da\n",
        "import dask.bag as db"
      ],
      "metadata": {
        "id": "TQRrhvMY1gEm"
      },
      "execution_count": 1,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "index = pd.date_range(\"2021-09-01\", periods=2400, freq=\"1h\")\n",
        "df = pd.DataFrame({\"a\": np.arange(2400), \"b\": list(\"abcaddbe\" * 300)}, index=index)\n",
        "ddf = dd.from_pandas(df, npartitions=10)"
      ],
      "metadata": {
        "id": "rk6q9lo-1kop"
      },
      "execution_count": 2,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "ddf"
      ],
      "metadata": {
        "id": "2PTjPGuG14RM",
        "outputId": "9a57f6cc-8026-4405-91cf-7c9a30b75a58",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 272
        }
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Dask DataFrame Structure:\n",
              "                         a       b\n",
              "npartitions=10                    \n",
              "2021-09-01 00:00:00  int64  object\n",
              "2021-09-11 00:00:00    ...     ...\n",
              "...                    ...     ...\n",
              "2021-11-30 00:00:00    ...     ...\n",
              "2021-12-09 23:00:00    ...     ...\n",
              "Dask Name: from_pandas, 1 graph layer"
            ],
            "text/html": [
              "<div><strong>Dask DataFrame Structure:</strong></div>\n",
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>a</th>\n",
              "      <th>b</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>npartitions=10</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2021-09-01 00:00:00</th>\n",
              "      <td>int64</td>\n",
              "      <td>object</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-09-11 00:00:00</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-11-30 00:00:00</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-12-09 23:00:00</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "<div>Dask Name: from_pandas, 1 graph layer</div>"
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "ddf.divisions"
      ],
      "metadata": {
        "id": "W-6IHq-m2B9d",
        "outputId": "5d58dc28-c001-4c9f-e574-253f0f7ecb2c",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(Timestamp('2021-09-01 00:00:00', freq='H'),\n",
              " Timestamp('2021-09-11 00:00:00', freq='H'),\n",
              " Timestamp('2021-09-21 00:00:00', freq='H'),\n",
              " Timestamp('2021-10-01 00:00:00', freq='H'),\n",
              " Timestamp('2021-10-11 00:00:00', freq='H'),\n",
              " Timestamp('2021-10-21 00:00:00', freq='H'),\n",
              " Timestamp('2021-10-31 00:00:00', freq='H'),\n",
              " Timestamp('2021-11-10 00:00:00', freq='H'),\n",
              " Timestamp('2021-11-20 00:00:00', freq='H'),\n",
              " Timestamp('2021-11-30 00:00:00', freq='H'),\n",
              " Timestamp('2021-12-09 23:00:00', freq='H'))"
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "ddf.partitions[1]"
      ],
      "metadata": {
        "id": "utnkIreH2azm",
        "outputId": "7c33d252-93b1-42b0-9c6e-2b1be1f7b01a",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 178
        }
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Dask DataFrame Structure:\n",
              "                   a       b\n",
              "npartitions=1               \n",
              "2021-09-11     int64  object\n",
              "2021-09-21       ...     ...\n",
              "Dask Name: blocks, 2 graph layers"
            ],
            "text/html": [
              "<div><strong>Dask DataFrame Structure:</strong></div>\n",
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>a</th>\n",
              "      <th>b</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>npartitions=1</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2021-09-11</th>\n",
              "      <td>int64</td>\n",
              "      <td>object</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-09-21</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "<div>Dask Name: blocks, 2 graph layers</div>"
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "ddf[\"2021-10-01\": \"2021-10-09 5:00\"].compute()"
      ],
      "metadata": {
        "id": "H21_sERq2z7t",
        "outputId": "43ce1806-0e96-46b8-82f4-abc0ba621a67",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        }
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       a  b\n",
              "2021-10-01 00:00:00  720  a\n",
              "2021-10-01 01:00:00  721  b\n",
              "2021-10-01 02:00:00  722  c\n",
              "2021-10-01 03:00:00  723  a\n",
              "2021-10-01 04:00:00  724  d\n",
              "...                  ... ..\n",
              "2021-10-09 01:00:00  913  b\n",
              "2021-10-09 02:00:00  914  c\n",
              "2021-10-09 03:00:00  915  a\n",
              "2021-10-09 04:00:00  916  d\n",
              "2021-10-09 05:00:00  917  d\n",
              "\n",
              "[198 rows x 2 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-316da0ad-f972-45bd-b25c-dd3ba7ba80fc\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>a</th>\n",
              "      <th>b</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2021-10-01 00:00:00</th>\n",
              "      <td>720</td>\n",
              "      <td>a</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-10-01 01:00:00</th>\n",
              "      <td>721</td>\n",
              "      <td>b</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-10-01 02:00:00</th>\n",
              "      <td>722</td>\n",
              "      <td>c</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-10-01 03:00:00</th>\n",
              "      <td>723</td>\n",
              "      <td>a</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-10-01 04:00:00</th>\n",
              "      <td>724</td>\n",
              "      <td>d</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-10-09 01:00:00</th>\n",
              "      <td>913</td>\n",
              "      <td>b</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-10-09 02:00:00</th>\n",
              "      <td>914</td>\n",
              "      <td>c</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-10-09 03:00:00</th>\n",
              "      <td>915</td>\n",
              "      <td>a</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-10-09 04:00:00</th>\n",
              "      <td>916</td>\n",
              "      <td>d</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-10-09 05:00:00</th>\n",
              "      <td>917</td>\n",
              "      <td>d</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>198 rows × 2 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-316da0ad-f972-45bd-b25c-dd3ba7ba80fc')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-316da0ad-f972-45bd-b25c-dd3ba7ba80fc button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-316da0ad-f972-45bd-b25c-dd3ba7ba80fc');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-498ceee2-1d2d-40cc-a2b2-c47ba67d6145\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-498ceee2-1d2d-40cc-a2b2-c47ba67d6145')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-498ceee2-1d2d-40cc-a2b2-c47ba67d6145 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "ddf.a.mean()"
      ],
      "metadata": {
        "id": "pwbKM13K26tW",
        "outputId": "a51735ee-8cb9-4ff5-dd45-02126966dc73",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "dd.Scalar<series-..., dtype=float64>"
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "ddf.a.mean().compute()"
      ],
      "metadata": {
        "id": "FGpJXZ3J2-6p",
        "outputId": "2c40e408-3202-47cd-81dc-929c30bd6e88",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1199.5"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "ddf.b.unique()"
      ],
      "metadata": {
        "id": "KBT6rPEQ3Bdz",
        "outputId": "b9df242e-c738-495f-dd88-128cdd8d19a4",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Dask Series Structure:\n",
              "npartitions=1\n",
              "    object\n",
              "       ...\n",
              "Name: b, dtype: object\n",
              "Dask Name: unique-agg, 4 graph layers"
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "ddf.b.unique().compute()"
      ],
      "metadata": {
        "id": "7jew96wz3KS_",
        "outputId": "948ae034-dc0a-4a91-dd40-6815bee66dd7",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0    a\n",
              "1    b\n",
              "2    c\n",
              "3    d\n",
              "4    e\n",
              "Name: b, dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "result = ddf[\"2021-10-01\": \"2021-10-09 5:00\"].a.cumsum() - 100\n",
        "result"
      ],
      "metadata": {
        "id": "xAKqv4bM3LuP",
        "outputId": "04b4cfb3-3d49-410c-d99b-64fbf2595441",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Dask Series Structure:\n",
              "npartitions=1\n",
              "2021-10-01 00:00:00.000000000    int64\n",
              "2021-10-09 05:00:59.999999999      ...\n",
              "Name: a, dtype: int64\n",
              "Dask Name: sub, 7 graph layers"
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "result.dask"
      ],
      "metadata": {
        "id": "8WTn_mcg3PEM",
        "outputId": "a763afb1-3af3-4674-c9b8-4c9643b48713",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 339
        }
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "HighLevelGraph with 7 layers.\n",
              "<dask.highlevelgraph.HighLevelGraph object at 0x7e44c1de2260>\n",
              " 0. from_pandas-0cbe98d3146265102bd377c83bf54abc\n",
              " 1. loc-718c9eb860303f317d596d746ca5c725\n",
              " 2. getitem-77c780988ee9d431cb050895e481e5ca\n",
              " 3. series-cumsum-map-1fc787e92e325aa97d1c7753cbf1a1ed\n",
              " 4. series-cumsum-take-last-8d3dfa099ea49c3b2ed2dadbe6a8e6ff\n",
              " 5. series-cumsum-a073ce0e199b132fa5d57060623ce23c\n",
              " 6. sub-6f2317e7437f3f7c36088ad6d76ba0f9"
            ],
            "text/html": [
              "<div>\n",
              "    <div>\n",
              "        <div style=\"width: 52px; height: 52px; position: absolute;\">\n",
              "            <svg width=\"76\" height=\"71\" viewBox=\"0 0 76 71\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n",
              "                <circle cx=\"61.5\" cy=\"36.5\" r=\"13.5\" style=\"stroke: var(--jp-ui-font-color2, #1D1D1D); fill: var(--jp-layout-color1, #F2F2F2);\" stroke-width=\"2\"/>\n",
              "                <circle cx=\"14.5\" cy=\"14.5\" r=\"13.5\" style=\"stroke: var(--jp-ui-font-color2, #1D1D1D); fill: var(--jp-layout-color1, #F2F2F2);\" stroke-width=\"2\"/>\n",
              "                <circle cx=\"14.5\" cy=\"56.5\" r=\"13.5\" style=\"stroke: var(--jp-ui-font-color2, #1D1D1D); fill: var(--jp-layout-color1, #F2F2F2);\" stroke-width=\"2\"/>\n",
              "                <path d=\"M28 16L30.5 16C33.2614 16 35.5 18.2386 35.5 21L35.5 32.0001C35.5 34.7615 37.7386 37.0001 40.5 37.0001L43 37.0001\" style=\"stroke: var(--jp-ui-font-color2, #1D1D1D);\" stroke-width=\"1.5\"/>\n",
              "                <path d=\"M40.5 37L40.5 37.75L40.5 37.75L40.5 37ZM35.5 42L36.25 42L35.5 42ZM35.5 52L34.75 52L35.5 52ZM30.5 57L30.5 57.75L30.5 57ZM41.5001 36.25L40.5 36.25L40.5 37.75L41.5001 37.75L41.5001 36.25ZM34.75 42L34.75 52L36.25 52L36.25 42L34.75 42ZM30.5 56.25L28.0001 56.25L28.0001 57.75L30.5 57.75L30.5 56.25ZM34.75 52C34.75 54.3472 32.8472 56.25 30.5 56.25L30.5 57.75C33.6756 57.75 36.25 55.1756 36.25 52L34.75 52ZM40.5 36.25C37.3244 36.25 34.75 38.8243 34.75 42L36.25 42C36.25 39.6528 38.1528 37.75 40.5 37.75L40.5 36.25Z\" style=\"fill: var(--jp-ui-font-color2, #1D1D1D);\"/>\n",
              "                <circle cx=\"28\" cy=\"16\" r=\"2.25\" fill=\"#E5E5E5\" style=\"stroke: var(--jp-ui-font-color2, #1D1D1D);\" stroke-width=\"1.5\"/>\n",
              "                <circle cx=\"28\" cy=\"57\" r=\"2.25\" fill=\"#E5E5E5\" style=\"stroke: var(--jp-ui-font-color2, #1D1D1D);\" stroke-width=\"1.5\"/>\n",
              "                <path d=\"M45.25 36.567C45.5833 36.7594 45.5833 37.2406 45.25 37.433L42.25 39.1651C41.9167 39.3575 41.5 39.117 41.5 38.7321V35.2679C41.5 34.883 41.9167 34.6425 42.25 34.8349L45.25 36.567Z\" style=\"fill: var(--jp-ui-font-color2, #1D1D1D);\"/>\n",
              "            </svg>\n",
              "        </div>\n",
              "        <div style=\"margin-left: 64px;\">\n",
              "            <h3 style=\"margin-bottom: 0px;\">HighLevelGraph</h3>\n",
              "            <p style=\"color: var(--jp-ui-font-color2, #5D5851); margin-bottom:0px;\">\n",
              "                HighLevelGraph with 7 layers and 16 keys from all layers.\n",
              "            </p>\n",
              "            \n",
              "            <div style=\"\">\n",
              "    <svg width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" style=\"position: absolute;\">\n",
              "        \n",
              "        <circle cx=\"16\" cy=\"16\" r=\"14\" fill=\"#8F8F8F\" style=\"stroke: var(--jp-ui-font-color2, #1D1D1D);\" stroke-width=\"2\"/>\n",
              "        \n",
              "    </svg>\n",
              "\n",
              "    <details style=\"margin-left: 32px;\">\n",
              "        <summary style=\"margin-bottom: 10px; margin-top: 10px;\">\n",
              "            <h4 style=\"display: inline;\">Layer1: from_pandas</h4>\n",
              "        </summary>\n",
              "        <p style=\"color: var(--jp-ui-font-color2, #5D5851); margin: -0.25em 0px 0px 0px;\">\n",
              "            from_pandas-0cbe98d3146265102bd377c83bf54abc\n",
              "        </p>\n",
              "\n",
              "        <table>\n",
              "        <tr>\n",
              "            <td>\n",
              "                <table>\n",
              "                \n",
              "                    <tr>\n",
              "                        <th style=\"text-align: left; width: 150px;\">layer_type</th>\n",
              "                        <td style=\"text-align: left;\">MaterializedLayer</td>\n",
              "                    </tr>\n",
              "                \n",
              "                    <tr>\n",
              "                        <th style=\"text-align: left; width: 150px;\">is_materialized</th>\n",
              "                        <td style=\"text-align: left;\">True</td>\n",
              "                    </tr>\n",
              "                \n",
              "                    <tr>\n",
              "                        <th style=\"text-align: left; width: 150px;\">number of outputs</th>\n",
              "                        <td style=\"text-align: left;\">10</td>\n",
              "                    </tr>\n",
              "                \n",
              "                    <tr>\n",
              "                        <th style=\"text-align: left; width: 150px;\">npartitions</th>\n",
              "                        <td style=\"text-align: left;\">10</td>\n",
              "                    </tr>\n",
              "                \n",
              "                    <tr>\n",
              "                        <th style=\"text-align: left; width: 150px;\">columns</th>\n",
              "                        <td style=\"text-align: left;\">[&#x27;a&#x27;, &#x27;b&#x27;]</td>\n",
              "                    </tr>\n",
              "                \n",
              "                    <tr>\n",
              "                        <th style=\"text-align: left; width: 150px;\">type</th>\n",
              "                        <td style=\"text-align: left;\">dask.dataframe.core.DataFrame</td>\n",
              "                    </tr>\n",
              "                \n",
              "                    <tr>\n",
              "                        <th style=\"text-align: left; width: 150px;\">dataframe_type</th>\n",
              "                        <td style=\"text-align: left;\">pandas.core.frame.DataFrame</td>\n",
              "                    </tr>\n",
              "                \n",
              "                    <tr>\n",
              "                        <th style=\"text-align: left; width: 150px;\">series_dtypes</th>\n",
              "                        <td style=\"text-align: left;\">{&#x27;a&#x27;: dtype(&#x27;int64&#x27;), &#x27;b&#x27;: dtype(&#x27;O&#x27;)}</td>\n",
              "                    </tr>\n",
              "                \n",
              "                \n",
              "                </table>\n",
              "            </td>\n",
              "            <td>\n",
              "                \n",
              "            </td>\n",
              "        </tr>\n",
              "        </table>\n",
              "\n",
              "    </details>\n",
              "</div>\n",
              "            \n",
              "            <div style=\"\">\n",
              "    <svg width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" style=\"position: absolute;\">\n",
              "        \n",
              "        <circle cx=\"16\" cy=\"16\" r=\"14\" fill=\"#8F8F8F\" style=\"stroke: var(--jp-ui-font-color2, #1D1D1D);\" stroke-width=\"2\"/>\n",
              "        \n",
              "    </svg>\n",
              "\n",
              "    <details style=\"margin-left: 32px;\">\n",
              "        <summary style=\"margin-bottom: 10px; margin-top: 10px;\">\n",
              "            <h4 style=\"display: inline;\">Layer2: loc</h4>\n",
              "        </summary>\n",
              "        <p style=\"color: var(--jp-ui-font-color2, #5D5851); margin: -0.25em 0px 0px 0px;\">\n",
              "            loc-718c9eb860303f317d596d746ca5c725\n",
              "        </p>\n",
              "\n",
              "        <table>\n",
              "        <tr>\n",
              "            <td>\n",
              "                <table>\n",
              "                \n",
              "                    <tr>\n",
              "                        <th style=\"text-align: left; width: 150px;\">layer_type</th>\n",
              "                        <td style=\"text-align: left;\">MaterializedLayer</td>\n",
              "                    </tr>\n",
              "                \n",
              "                    <tr>\n",
              "                        <th style=\"text-align: left; width: 150px;\">is_materialized</th>\n",
              "                        <td style=\"text-align: left;\">True</td>\n",
              "                    </tr>\n",
              "                \n",
              "                    <tr>\n",
              "                        <th style=\"text-align: left; width: 150px;\">number of outputs</th>\n",
              "                        <td style=\"text-align: left;\">1</td>\n",
              "                    </tr>\n",
              "                \n",
              "                    <tr>\n",
              "                        <th style=\"text-align: left; width: 150px;\">npartitions</th>\n",
              "                        <td style=\"text-align: left;\">1</td>\n",
              "                    </tr>\n",
              "                \n",
              "                    <tr>\n",
              "                        <th style=\"text-align: left; width: 150px;\">columns</th>\n",
              "                        <td style=\"text-align: left;\">[&#x27;a&#x27;, &#x27;b&#x27;]</td>\n",
              "                    </tr>\n",
              "                \n",
              "                    <tr>\n",
              "                        <th style=\"text-align: left; width: 150px;\">type</th>\n",
              "                        <td style=\"text-align: left;\">dask.dataframe.core.DataFrame</td>\n",
              "                    </tr>\n",
              "                \n",
              "                    <tr>\n",
              "                        <th style=\"text-align: left; width: 150px;\">dataframe_type</th>\n",
              "                        <td style=\"text-align: left;\">pandas.core.frame.DataFrame</td>\n",
              "                    </tr>\n",
              "                \n",
              "                    <tr>\n",
              "                        <th style=\"text-align: left; width: 150px;\">series_dtypes</th>\n",
              "                        <td style=\"text-align: left;\">{&#x27;a&#x27;: dtype(&#x27;int64&#x27;), &#x27;b&#x27;: dtype(&#x27;O&#x27;)}</td>\n",
              "                    </tr>\n",
              "                \n",
              "                \n",
              "                    \n",
              "                        <tr>\n",
              "                            <th style=\"text-align: left; width: 150px;\"> depends on </th>\n",
              "                            <td style=\"text-align: left;\">from_pandas-0cbe98d3146265102bd377c83bf54abc</td>\n",
              "                        </tr>\n",
              "                    \n",
              "                \n",
              "                </table>\n",
              "            </td>\n",
              "            <td>\n",
              "                \n",
              "            </td>\n",
              "        </tr>\n",
              "        </table>\n",
              "\n",
              "    </details>\n",
              "</div>\n",
              "            \n",
              "            <div style=\"\">\n",
              "    <svg width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" style=\"position: absolute;\">\n",
              "        \n",
              "        <circle cx=\"16\" cy=\"16\" r=\"14\" style=\"stroke: var(--jp-ui-font-color2, #1D1D1D); fill: var(--jp-layout-color1, #F2F2F2);\" stroke-width=\"2\" />\n",
              "        \n",
              "    </svg>\n",
              "\n",
              "    <details style=\"margin-left: 32px;\">\n",
              "        <summary style=\"margin-bottom: 10px; margin-top: 10px;\">\n",
              "            <h4 style=\"display: inline;\">Layer3: getitem</h4>\n",
              "        </summary>\n",
              "        <p style=\"color: var(--jp-ui-font-color2, #5D5851); margin: -0.25em 0px 0px 0px;\">\n",
              "            getitem-77c780988ee9d431cb050895e481e5ca\n",
              "        </p>\n",
              "\n",
              "        <table>\n",
              "        <tr>\n",
              "            <td>\n",
              "                <table>\n",
              "                \n",
              "                    <tr>\n",
              "                        <th style=\"text-align: left; width: 150px;\">layer_type</th>\n",
              "                        <td style=\"text-align: left;\">Blockwise</td>\n",
              "                    </tr>\n",
              "                \n",
              "                    <tr>\n",
              "                        <th style=\"text-align: left; width: 150px;\">is_materialized</th>\n",
              "                        <td style=\"text-align: left;\">False</td>\n",
              "                    </tr>\n",
              "                \n",
              "                    <tr>\n",
              "                        <th style=\"text-align: left; width: 150px;\">number of outputs</th>\n",
              "                        <td style=\"text-align: left;\">1</td>\n",
              "                    </tr>\n",
              "                \n",
              "                \n",
              "                    \n",
              "                        <tr>\n",
              "                            <th style=\"text-align: left; width: 150px;\"> depends on </th>\n",
              "                            <td style=\"text-align: left;\">loc-718c9eb860303f317d596d746ca5c725</td>\n",
              "                        </tr>\n",
              "                    \n",
              "                \n",
              "                </table>\n",
              "            </td>\n",
              "            <td>\n",
              "                \n",
              "            </td>\n",
              "        </tr>\n",
              "        </table>\n",
              "\n",
              "    </details>\n",
              "</div>\n",
              "            \n",
              "            <div style=\"\">\n",
              "    <svg width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" style=\"position: absolute;\">\n",
              "        \n",
              "        <circle cx=\"16\" cy=\"16\" r=\"14\" style=\"stroke: var(--jp-ui-font-color2, #1D1D1D); fill: var(--jp-layout-color1, #F2F2F2);\" stroke-width=\"2\" />\n",
              "        \n",
              "    </svg>\n",
              "\n",
              "    <details style=\"margin-left: 32px;\">\n",
              "        <summary style=\"margin-bottom: 10px; margin-top: 10px;\">\n",
              "            <h4 style=\"display: inline;\">Layer4: series-cumsum-map</h4>\n",
              "        </summary>\n",
              "        <p style=\"color: var(--jp-ui-font-color2, #5D5851); margin: -0.25em 0px 0px 0px;\">\n",
              "            series-cumsum-map-1fc787e92e325aa97d1c7753cbf1a1ed\n",
              "        </p>\n",
              "\n",
              "        <table>\n",
              "        <tr>\n",
              "            <td>\n",
              "                <table>\n",
              "                \n",
              "                    <tr>\n",
              "                        <th style=\"text-align: left; width: 150px;\">layer_type</th>\n",
              "                        <td style=\"text-align: left;\">Blockwise</td>\n",
              "                    </tr>\n",
              "                \n",
              "                    <tr>\n",
              "                        <th style=\"text-align: left; width: 150px;\">is_materialized</th>\n",
              "                        <td style=\"text-align: left;\">False</td>\n",
              "                    </tr>\n",
              "                \n",
              "                    <tr>\n",
              "                        <th style=\"text-align: left; width: 150px;\">number of outputs</th>\n",
              "                        <td style=\"text-align: left;\">1</td>\n",
              "                    </tr>\n",
              "                \n",
              "                \n",
              "                    \n",
              "                        <tr>\n",
              "                            <th style=\"text-align: left; width: 150px;\"> depends on </th>\n",
              "                            <td style=\"text-align: left;\">getitem-77c780988ee9d431cb050895e481e5ca</td>\n",
              "                        </tr>\n",
              "                    \n",
              "                \n",
              "                </table>\n",
              "            </td>\n",
              "            <td>\n",
              "                \n",
              "            </td>\n",
              "        </tr>\n",
              "        </table>\n",
              "\n",
              "    </details>\n",
              "</div>\n",
              "            \n",
              "            <div style=\"\">\n",
              "    <svg width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" style=\"position: absolute;\">\n",
              "        \n",
              "        <circle cx=\"16\" cy=\"16\" r=\"14\" style=\"stroke: var(--jp-ui-font-color2, #1D1D1D); fill: var(--jp-layout-color1, #F2F2F2);\" stroke-width=\"2\" />\n",
              "        \n",
              "    </svg>\n",
              "\n",
              "    <details style=\"margin-left: 32px;\">\n",
              "        <summary style=\"margin-bottom: 10px; margin-top: 10px;\">\n",
              "            <h4 style=\"display: inline;\">Layer5: series-cumsum-take-last</h4>\n",
              "        </summary>\n",
              "        <p style=\"color: var(--jp-ui-font-color2, #5D5851); margin: -0.25em 0px 0px 0px;\">\n",
              "            series-cumsum-take-last-8d3dfa099ea49c3b2ed2dadbe6a8e6ff\n",
              "        </p>\n",
              "\n",
              "        <table>\n",
              "        <tr>\n",
              "            <td>\n",
              "                <table>\n",
              "                \n",
              "                    <tr>\n",
              "                        <th style=\"text-align: left; width: 150px;\">layer_type</th>\n",
              "                        <td style=\"text-align: left;\">Blockwise</td>\n",
              "                    </tr>\n",
              "                \n",
              "                    <tr>\n",
              "                        <th style=\"text-align: left; width: 150px;\">is_materialized</th>\n",
              "                        <td style=\"text-align: left;\">False</td>\n",
              "                    </tr>\n",
              "                \n",
              "                    <tr>\n",
              "                        <th style=\"text-align: left; width: 150px;\">number of outputs</th>\n",
              "                        <td style=\"text-align: left;\">1</td>\n",
              "                    </tr>\n",
              "                \n",
              "                \n",
              "                    \n",
              "                        <tr>\n",
              "                            <th style=\"text-align: left; width: 150px;\"> depends on </th>\n",
              "                            <td style=\"text-align: left;\">series-cumsum-map-1fc787e92e325aa97d1c7753cbf1a1ed</td>\n",
              "                        </tr>\n",
              "                    \n",
              "                \n",
              "                </table>\n",
              "            </td>\n",
              "            <td>\n",
              "                \n",
              "            </td>\n",
              "        </tr>\n",
              "        </table>\n",
              "\n",
              "    </details>\n",
              "</div>\n",
              "            \n",
              "            <div style=\"\">\n",
              "    <svg width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" style=\"position: absolute;\">\n",
              "        \n",
              "        <circle cx=\"16\" cy=\"16\" r=\"14\" fill=\"#8F8F8F\" style=\"stroke: var(--jp-ui-font-color2, #1D1D1D);\" stroke-width=\"2\"/>\n",
              "        \n",
              "    </svg>\n",
              "\n",
              "    <details style=\"margin-left: 32px;\">\n",
              "        <summary style=\"margin-bottom: 10px; margin-top: 10px;\">\n",
              "            <h4 style=\"display: inline;\">Layer6: series-cumsum</h4>\n",
              "        </summary>\n",
              "        <p style=\"color: var(--jp-ui-font-color2, #5D5851); margin: -0.25em 0px 0px 0px;\">\n",
              "            series-cumsum-a073ce0e199b132fa5d57060623ce23c\n",
              "        </p>\n",
              "\n",
              "        <table>\n",
              "        <tr>\n",
              "            <td>\n",
              "                <table>\n",
              "                \n",
              "                    <tr>\n",
              "                        <th style=\"text-align: left; width: 150px;\">layer_type</th>\n",
              "                        <td style=\"text-align: left;\">MaterializedLayer</td>\n",
              "                    </tr>\n",
              "                \n",
              "                    <tr>\n",
              "                        <th style=\"text-align: left; width: 150px;\">is_materialized</th>\n",
              "                        <td style=\"text-align: left;\">True</td>\n",
              "                    </tr>\n",
              "                \n",
              "                    <tr>\n",
              "                        <th style=\"text-align: left; width: 150px;\">number of outputs</th>\n",
              "                        <td style=\"text-align: left;\">1</td>\n",
              "                    </tr>\n",
              "                \n",
              "                \n",
              "                    \n",
              "                        <tr>\n",
              "                            <th style=\"text-align: left; width: 150px;\"> depends on </th>\n",
              "                            <td style=\"text-align: left;\">series-cumsum-take-last-8d3dfa099ea49c3b2ed2dadbe6a8e6ff</td>\n",
              "                        </tr>\n",
              "                    \n",
              "                \n",
              "                    \n",
              "                        <tr>\n",
              "                            <th style=\"text-align: left; width: 150px;\"></th>\n",
              "                            <td style=\"text-align: left;\">series-cumsum-map-1fc787e92e325aa97d1c7753cbf1a1ed</td>\n",
              "                        </tr>\n",
              "                    \n",
              "                \n",
              "                </table>\n",
              "            </td>\n",
              "            <td>\n",
              "                \n",
              "            </td>\n",
              "        </tr>\n",
              "        </table>\n",
              "\n",
              "    </details>\n",
              "</div>\n",
              "            \n",
              "            <div style=\"\">\n",
              "    <svg width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" style=\"position: absolute;\">\n",
              "        \n",
              "        <circle cx=\"16\" cy=\"16\" r=\"14\" style=\"stroke: var(--jp-ui-font-color2, #1D1D1D); fill: var(--jp-layout-color1, #F2F2F2);\" stroke-width=\"2\" />\n",
              "        \n",
              "    </svg>\n",
              "\n",
              "    <details style=\"margin-left: 32px;\">\n",
              "        <summary style=\"margin-bottom: 10px; margin-top: 10px;\">\n",
              "            <h4 style=\"display: inline;\">Layer7: sub</h4>\n",
              "        </summary>\n",
              "        <p style=\"color: var(--jp-ui-font-color2, #5D5851); margin: -0.25em 0px 0px 0px;\">\n",
              "            sub-6f2317e7437f3f7c36088ad6d76ba0f9\n",
              "        </p>\n",
              "\n",
              "        <table>\n",
              "        <tr>\n",
              "            <td>\n",
              "                <table>\n",
              "                \n",
              "                    <tr>\n",
              "                        <th style=\"text-align: left; width: 150px;\">layer_type</th>\n",
              "                        <td style=\"text-align: left;\">Blockwise</td>\n",
              "                    </tr>\n",
              "                \n",
              "                    <tr>\n",
              "                        <th style=\"text-align: left; width: 150px;\">is_materialized</th>\n",
              "                        <td style=\"text-align: left;\">False</td>\n",
              "                    </tr>\n",
              "                \n",
              "                    <tr>\n",
              "                        <th style=\"text-align: left; width: 150px;\">number of outputs</th>\n",
              "                        <td style=\"text-align: left;\">1</td>\n",
              "                    </tr>\n",
              "                \n",
              "                \n",
              "                    \n",
              "                        <tr>\n",
              "                            <th style=\"text-align: left; width: 150px;\"> depends on </th>\n",
              "                            <td style=\"text-align: left;\">series-cumsum-a073ce0e199b132fa5d57060623ce23c</td>\n",
              "                        </tr>\n",
              "                    \n",
              "                \n",
              "                </table>\n",
              "            </td>\n",
              "            <td>\n",
              "                \n",
              "            </td>\n",
              "        </tr>\n",
              "        </table>\n",
              "\n",
              "    </details>\n",
              "</div>\n",
              "            \n",
              "        </div>\n",
              "    </div>\n",
              "</div>"
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "result.visualize()"
      ],
      "metadata": {
        "id": "XZSOcny33Rzo",
        "outputId": "98898d28-b9c7-406f-c673-6492202cd0b9",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        }
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<IPython.core.display.Image object>"
            ]
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from dask.distributed import Client\n",
        "client = Client()\n",
        "client"
      ],
      "metadata": {
        "id": "Rqmw6Oru3oZ_",
        "outputId": "f7bc48c6-fd73-4ae1-ec25-09bdf4826bec",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 425
        }
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "INFO:distributed.http.proxy:To route to workers diagnostics web server please install jupyter-server-proxy: python -m pip install jupyter-server-proxy\n",
            "INFO:distributed.scheduler:State start\n",
            "INFO:distributed.scheduler:  Scheduler at:     tcp://127.0.0.1:34049\n",
            "INFO:distributed.scheduler:  dashboard at:  http://127.0.0.1:8787/status\n",
            "INFO:distributed.nanny:        Start Nanny at: 'tcp://127.0.0.1:43927'\n",
            "INFO:distributed.nanny:        Start Nanny at: 'tcp://127.0.0.1:45287'\n",
            "INFO:distributed.scheduler:Register worker <WorkerState 'tcp://127.0.0.1:37335', name: 1, status: init, memory: 0, processing: 0>\n",
            "INFO:distributed.scheduler:Starting worker compute stream, tcp://127.0.0.1:37335\n",
            "INFO:distributed.core:Starting established connection to tcp://127.0.0.1:43186\n",
            "INFO:distributed.scheduler:Register worker <WorkerState 'tcp://127.0.0.1:33299', name: 0, status: init, memory: 0, processing: 0>\n",
            "INFO:distributed.scheduler:Starting worker compute stream, tcp://127.0.0.1:33299\n",
            "INFO:distributed.core:Starting established connection to tcp://127.0.0.1:43200\n",
            "INFO:distributed.scheduler:Receive client connection: Client-e14efed9-7927-11ee-813a-0242ac1c000c\n",
            "INFO:distributed.core:Starting established connection to tcp://127.0.0.1:52106\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Client: 'tcp://127.0.0.1:34049' processes=2 threads=2, memory=12.68 GiB>"
            ],
            "text/html": [
              "<div>\n",
              "    <div style=\"width: 24px; height: 24px; background-color: #e1e1e1; border: 3px solid #9D9D9D; border-radius: 5px; position: absolute;\"> </div>\n",
              "    <div style=\"margin-left: 48px;\">\n",
              "        <h3 style=\"margin-bottom: 0px;\">Client</h3>\n",
              "        <p style=\"color: #9D9D9D; margin-bottom: 0px;\">Client-e14efed9-7927-11ee-813a-0242ac1c000c</p>\n",
              "        <table style=\"width: 100%; text-align: left;\">\n",
              "\n",
              "        <tr>\n",
              "        \n",
              "            <td style=\"text-align: left;\"><strong>Connection method:</strong> Cluster object</td>\n",
              "            <td style=\"text-align: left;\"><strong>Cluster type:</strong> distributed.LocalCluster</td>\n",
              "        \n",
              "        </tr>\n",
              "\n",
              "        \n",
              "            <tr>\n",
              "                <td style=\"text-align: left;\">\n",
              "                    <strong>Dashboard: </strong> <a href=\"http://127.0.0.1:8787/status\" target=\"_blank\">http://127.0.0.1:8787/status</a>\n",
              "                </td>\n",
              "                <td style=\"text-align: left;\"></td>\n",
              "            </tr>\n",
              "        \n",
              "\n",
              "        </table>\n",
              "\n",
              "        \n",
              "\n",
              "        \n",
              "            <details>\n",
              "            <summary style=\"margin-bottom: 20px;\"><h3 style=\"display: inline;\">Cluster Info</h3></summary>\n",
              "            <div class=\"jp-RenderedHTMLCommon jp-RenderedHTML jp-mod-trusted jp-OutputArea-output\">\n",
              "    <div style=\"width: 24px; height: 24px; background-color: #e1e1e1; border: 3px solid #9D9D9D; border-radius: 5px; position: absolute;\">\n",
              "    </div>\n",
              "    <div style=\"margin-left: 48px;\">\n",
              "        <h3 style=\"margin-bottom: 0px; margin-top: 0px;\">LocalCluster</h3>\n",
              "        <p style=\"color: #9D9D9D; margin-bottom: 0px;\">8a8fe6bc</p>\n",
              "        <table style=\"width: 100%; text-align: left;\">\n",
              "            <tr>\n",
              "                <td style=\"text-align: left;\">\n",
              "                    <strong>Dashboard:</strong> <a href=\"http://127.0.0.1:8787/status\" target=\"_blank\">http://127.0.0.1:8787/status</a>\n",
              "                </td>\n",
              "                <td style=\"text-align: left;\">\n",
              "                    <strong>Workers:</strong> 2\n",
              "                </td>\n",
              "            </tr>\n",
              "            <tr>\n",
              "                <td style=\"text-align: left;\">\n",
              "                    <strong>Total threads:</strong> 2\n",
              "                </td>\n",
              "                <td style=\"text-align: left;\">\n",
              "                    <strong>Total memory:</strong> 12.68 GiB\n",
              "                </td>\n",
              "            </tr>\n",
              "            \n",
              "            <tr>\n",
              "    <td style=\"text-align: left;\"><strong>Status:</strong> running</td>\n",
              "    <td style=\"text-align: left;\"><strong>Using processes:</strong> True</td>\n",
              "</tr>\n",
              "\n",
              "            \n",
              "        </table>\n",
              "\n",
              "        <details>\n",
              "            <summary style=\"margin-bottom: 20px;\">\n",
              "                <h3 style=\"display: inline;\">Scheduler Info</h3>\n",
              "            </summary>\n",
              "\n",
              "            <div style=\"\">\n",
              "    <div>\n",
              "        <div style=\"width: 24px; height: 24px; background-color: #FFF7E5; border: 3px solid #FF6132; border-radius: 5px; position: absolute;\"> </div>\n",
              "        <div style=\"margin-left: 48px;\">\n",
              "            <h3 style=\"margin-bottom: 0px;\">Scheduler</h3>\n",
              "            <p style=\"color: #9D9D9D; margin-bottom: 0px;\">Scheduler-de896967-17a3-4f92-9699-314c3900d47c</p>\n",
              "            <table style=\"width: 100%; text-align: left;\">\n",
              "                <tr>\n",
              "                    <td style=\"text-align: left;\">\n",
              "                        <strong>Comm:</strong> tcp://127.0.0.1:34049\n",
              "                    </td>\n",
              "                    <td style=\"text-align: left;\">\n",
              "                        <strong>Workers:</strong> 2\n",
              "                    </td>\n",
              "                </tr>\n",
              "                <tr>\n",
              "                    <td style=\"text-align: left;\">\n",
              "                        <strong>Dashboard:</strong> <a href=\"http://127.0.0.1:8787/status\" target=\"_blank\">http://127.0.0.1:8787/status</a>\n",
              "                    </td>\n",
              "                    <td style=\"text-align: left;\">\n",
              "                        <strong>Total threads:</strong> 2\n",
              "                    </td>\n",
              "                </tr>\n",
              "                <tr>\n",
              "                    <td style=\"text-align: left;\">\n",
              "                        <strong>Started:</strong> Just now\n",
              "                    </td>\n",
              "                    <td style=\"text-align: left;\">\n",
              "                        <strong>Total memory:</strong> 12.68 GiB\n",
              "                    </td>\n",
              "                </tr>\n",
              "            </table>\n",
              "        </div>\n",
              "    </div>\n",
              "\n",
              "    <details style=\"margin-left: 48px;\">\n",
              "        <summary style=\"margin-bottom: 20px;\">\n",
              "            <h3 style=\"display: inline;\">Workers</h3>\n",
              "        </summary>\n",
              "\n",
              "        \n",
              "        <div style=\"margin-bottom: 20px;\">\n",
              "            <div style=\"width: 24px; height: 24px; background-color: #DBF5FF; border: 3px solid #4CC9FF; border-radius: 5px; position: absolute;\"> </div>\n",
              "            <div style=\"margin-left: 48px;\">\n",
              "            <details>\n",
              "                <summary>\n",
              "                    <h4 style=\"margin-bottom: 0px; display: inline;\">Worker: 0</h4>\n",
              "                </summary>\n",
              "                <table style=\"width: 100%; text-align: left;\">\n",
              "                    <tr>\n",
              "                        <td style=\"text-align: left;\">\n",
              "                            <strong>Comm: </strong> tcp://127.0.0.1:33299\n",
              "                        </td>\n",
              "                        <td style=\"text-align: left;\">\n",
              "                            <strong>Total threads: </strong> 1\n",
              "                        </td>\n",
              "                    </tr>\n",
              "                    <tr>\n",
              "                        <td style=\"text-align: left;\">\n",
              "                            <strong>Dashboard: </strong> <a href=\"http://127.0.0.1:42285/status\" target=\"_blank\">http://127.0.0.1:42285/status</a>\n",
              "                        </td>\n",
              "                        <td style=\"text-align: left;\">\n",
              "                            <strong>Memory: </strong> 6.34 GiB\n",
              "                        </td>\n",
              "                    </tr>\n",
              "                    <tr>\n",
              "                        <td style=\"text-align: left;\">\n",
              "                            <strong>Nanny: </strong> tcp://127.0.0.1:43927\n",
              "                        </td>\n",
              "                        <td style=\"text-align: left;\"></td>\n",
              "                    </tr>\n",
              "                    <tr>\n",
              "                        <td colspan=\"2\" style=\"text-align: left;\">\n",
              "                            <strong>Local directory: </strong> /tmp/dask-scratch-space/worker-xx62dz2y\n",
              "                        </td>\n",
              "                    </tr>\n",
              "\n",
              "                    \n",
              "\n",
              "                    \n",
              "\n",
              "                </table>\n",
              "            </details>\n",
              "            </div>\n",
              "        </div>\n",
              "        \n",
              "        <div style=\"margin-bottom: 20px;\">\n",
              "            <div style=\"width: 24px; height: 24px; background-color: #DBF5FF; border: 3px solid #4CC9FF; border-radius: 5px; position: absolute;\"> </div>\n",
              "            <div style=\"margin-left: 48px;\">\n",
              "            <details>\n",
              "                <summary>\n",
              "                    <h4 style=\"margin-bottom: 0px; display: inline;\">Worker: 1</h4>\n",
              "                </summary>\n",
              "                <table style=\"width: 100%; text-align: left;\">\n",
              "                    <tr>\n",
              "                        <td style=\"text-align: left;\">\n",
              "                            <strong>Comm: </strong> tcp://127.0.0.1:37335\n",
              "                        </td>\n",
              "                        <td style=\"text-align: left;\">\n",
              "                            <strong>Total threads: </strong> 1\n",
              "                        </td>\n",
              "                    </tr>\n",
              "                    <tr>\n",
              "                        <td style=\"text-align: left;\">\n",
              "                            <strong>Dashboard: </strong> <a href=\"http://127.0.0.1:45531/status\" target=\"_blank\">http://127.0.0.1:45531/status</a>\n",
              "                        </td>\n",
              "                        <td style=\"text-align: left;\">\n",
              "                            <strong>Memory: </strong> 6.34 GiB\n",
              "                        </td>\n",
              "                    </tr>\n",
              "                    <tr>\n",
              "                        <td style=\"text-align: left;\">\n",
              "                            <strong>Nanny: </strong> tcp://127.0.0.1:45287\n",
              "                        </td>\n",
              "                        <td style=\"text-align: left;\"></td>\n",
              "                    </tr>\n",
              "                    <tr>\n",
              "                        <td colspan=\"2\" style=\"text-align: left;\">\n",
              "                            <strong>Local directory: </strong> /tmp/dask-scratch-space/worker-km1vfkb4\n",
              "                        </td>\n",
              "                    </tr>\n",
              "\n",
              "                    \n",
              "\n",
              "                    \n",
              "\n",
              "                </table>\n",
              "            </details>\n",
              "            </div>\n",
              "        </div>\n",
              "        \n",
              "\n",
              "    </details>\n",
              "</div>\n",
              "\n",
              "        </details>\n",
              "    </div>\n",
              "</div>\n",
              "            </details>\n",
              "        \n",
              "\n",
              "    </div>\n",
              "</div>"
            ]
          },
          "metadata": {},
          "execution_count": 15
        }
      ]
    }
  ]
}